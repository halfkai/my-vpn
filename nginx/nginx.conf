
user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;


events {
    worker_connections 1024;
}

stream {
    map $ssl_preread_server_name $backend {
        <this_should_be_replaced_by_root_domain> web_backend;
        default reality_backend;
    }

    upstream web_backend {
        server 127.0.0.1:8443;
    }

    upstream reality_backend {
        server 127.0.0.1:1443;
    }

    server {
        listen [::]:443 reuseport;
        listen 443 reuseport;

        ssl_preread on;
        proxy_protocol on;
        proxy_pass $backend;
    }

    # server {
    #     listen [::]:443 udp reuseport;
    #     listen 443 udp reuseport;

    #     proxy_pass hysteria_backend;
    #     proxy_timeout 20s;
    # }
}

http {
    server_tokens off;
    include mime.types;
    default_type application/octet-stream;

    map $http_x_forwarded_for $client_real_ip {
        "" $remote_addr;
        "~*(?P<first_addr>([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}|([0-9]{1,3}\.){3}[0-9]{1,3})$" $first_addr;
    }

    port_in_redirect off;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"'
    '"$upstream_addr" "$upstream_status" "$upstream_response_time" "$request_time" $client_real_ip ';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;

    gzip on;
    gzip_types text/css application/json application/javascript text/xml application/xml;

    tcp_nopush on;

    add_header Cache-Control no-store;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Alt-Svc 'h3=":443"; ma=86400';

    ssl_certificate /etc/letsencrypt/live/<this_should_be_replaced_by_root_domain>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<this_should_be_replaced_by_root_domain>/privkey.pem;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;

    server {
        listen 80;
        listen [::]:80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 127.0.0.1:8443 quic reuseport;
        listen 127.0.0.1:8443 ssl proxy_protocol reuseport;

        http2 on;

        set_real_ip_from 127.0.0.1;
        real_ip_header proxy_protocol;

        location /<this_should_be_replaced_by_xhttp_path> {
            grpc_pass grpc://127.0.0.1:2024;
            grpc_set_header Host $host;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }


    include conf.d/*.conf;
}
